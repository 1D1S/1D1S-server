extend type Query {
    allChallenges: [Challenge!]!
    myChallenges: [Challenge]

    randomChallenges(first: Int = 10): [Challenge]
    challengesList(
        filter: ChallengeFilterInput,
        first: Int = 10,
        after: String
    ): ChallengeConnection

    challengeById(id: ID!): Challenge!
}

input ChallengeFilterInput {
    keyword: String
    job: JobType
    status: ChallengeProgressStatus
    ageGroup: AgeGroup
    duration: DurationRange
}

input DurationRange {
    minDays: Int
    maxDays: Int
}

type ChallengeConnection {
    edges: [ChallengeEdge]
    pageInfo: PageInfo!
}

type ChallengeEdge {
    node: Challenge
    cursor: String!
}